"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{9881:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return m},default:function(){return u}});var n=a(7462),i=a(3366),o=(a(7294),a(3905)),r=["components"],s={sidebar_position:1},l=void 0,c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"intro",description:"ISC license",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Mockingbird API Documentation",permalink:"/docs/mock-decorator"}},m=[{value:"Installation",id:"installation",children:[]},{value:"What is &quot;Mocking Library&quot;?",id:"what-is-mocking-library",children:[]},{value:"Features",id:"features",children:[]},{value:"Usage",id:"usage",children:[]},{value:"Documentation",id:"documentation",children:[]},{value:"Playground",id:"playground",children:[]},{value:"Motivation",id:"motivation",children:[{value:"What is <code>faker.js</code>?",id:"what-is-fakerjs",children:[]}]},{value:"License",id:"license",children:[]},{value:"Acknowledgements",id:"acknowledgements",children:[]}],d={toc:m};function u(e){var t=e.components,a=(0,i.Z)(e,r);return(0,o.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"http://opensource.org/licenses/MIT"},(0,o.kt)("img",{parentName:"a",src:"http://img.shields.io/badge/license-MIT-brightgreen.svg",alt:"ISC license"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://npmjs.org/package/mockingbird-ts",title:"View this project on npm"},(0,o.kt)("img",{parentName:"a",src:"http://img.shields.io/npm/v/mockingbird-ts.svg?style=flat",alt:"npm version"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://codecov.io/gh/omermorad/mockingbird"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/codecov/c/github/omermorad/mockingbird/master.svg?style=flat-square",alt:"Codecov Coverage"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://lerna.js.org/"},(0,o.kt)("img",{parentName:"a",src:"https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg",alt:"lerna"})),"\n",(0,o.kt)("a",{parentName:"p",href:"https://github.com/omermorad/mockingbird/actions"},(0,o.kt)("img",{parentName:"a",src:"https://github.com/omermorad/mockingbird/actions/workflows/ci.yml/badge.svg?branch=master",alt:"ci"}))),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i mockingbird-ts\n")),(0,o.kt)("h2",{id:"what-is-mocking-library"},'What is "Mocking Library"?'),(0,o.kt)("p",null,"A lot of times you find yourself \u201cpreparing\u201d some dummy data for your tests that\nhas to make sense for a specific test case(s) and is manipulated often.\nSome developers are preparing JSON files, others create a long verbose object in\nthe test file itself, but the outcome always contains some fake data inside\n(or even a snapshot from an external API)."),(0,o.kt)("p",null,"This is what Mockingbird aims to solve!\nIt suggests two ways of creating mocks for your entities/models classes, thus,\ncreating one uniform way to manage mocks (whether you are working alone or with your team),\nyour dev experience will improve, and you won\u2019t have to deal with this messy setup at all!"),(0,o.kt)("h2",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Prepare as many unique mocks/fixtures as you need for your tests"),(0,o.kt)("li",{parentName:"ul"},"Generate dummy (but reasonable) data for database seeding"),(0,o.kt)("li",{parentName:"ul"},"Manage your mocks from one place, forget about the messy work"),(0,o.kt)("li",{parentName:"ul"},"Full TypeScript compatibility"),(0,o.kt)("li",{parentName:"ul"},"Convenient and simple API")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Here is the simplest usage of Mockingbird:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"// Could be interface as well\nclass BirdEntity {\n  name: string;\n  birthday: Date;\n  goodPoints: number;\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import { Mock, MockFactory } from 'mockingbird-ts';\n\n// BirdEntity could be an interface or a class\nclass BirdEntityMock implements BirdEntity {\n  @Mock(faker => faker.name.firstName())\n  name!: string;\n\n  @Mock()\n  birthday!: Date; // Will generate a recent date\n\n  @Mock()\n  goodPoints!: number; // Will generate a random number\n}\n\nconst oneBird = MockFactory(BirdEntityMock).one();\nconst lotsOfBirds = MockFactory(BirdEntityMock).many(3);\n")),(0,o.kt)("h2",{id:"documentation"},"Documentation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"https://github.com/omermorad/faker.ts/blob/master/docs/README.md"},"Jump to the full documentation and explore the full API"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"There's also an example, ",(0,o.kt)("a",{parentName:"strong",href:"https://github.com/omermorad/mockingbird-ts/tree/master/sample"},"you can find it under the sample folder"))),(0,o.kt)("h2",{id:"playground"},"Playground"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Jump to the ",(0,o.kt)("a",{parentName:"strong",href:"https://repl.it/@omermorad/Mockingbird-Playground"},"REPL Playground")," where you can see Mockingbird in action!")),(0,o.kt)("h2",{id:"motivation"},"Motivation"),(0,o.kt)("p",null,'Creating mocks for your tests (sometimes called "fixtures") can be a tedious and\ncumbersome process usually done manually.'),(0,o.kt)("p",null,"We came up with a simple yet super convenient solution: all you have to do to get mocks out of the\nbox is to decorate your classes (whether it's an entity, or a model representing the database layer)\nand generate simple or complex mocks."),(0,o.kt)("p",null,"Mockingbird offers two different ways for preparing mocks; The first one (as we call it), is the TypeScript\nway which requires decorating existing (or duplicate) classes.\nThe second way is to use Mockingbird's functionality directly"),(0,o.kt)("h3",{id:"what-is-fakerjs"},"What is ",(0,o.kt)("inlineCode",{parentName:"h3"},"faker.js"),"?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"faker.js"),' it\'s a library which is used to "generate massive amounts of fake data in the browser and Node".'),(0,o.kt)("p",null,"Mockingbird uses ",(0,o.kt)("inlineCode",{parentName:"p"},"faker.js")," under the hood, making it possible to enjoy its rich database, and thereby allows\nto create mocks that are meaningful like email, first name, address and many more."),(0,o.kt)("h2",{id:"license"},"License"),(0,o.kt)("p",null,"Distributed under the MIT License. See ",(0,o.kt)("inlineCode",{parentName:"p"},"LICENSE")," for more information."),(0,o.kt)("h2",{id:"acknowledgements"},"Acknowledgements"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/marak/Faker.js"},"faker.js")))}u.isMDXComponent=!0}}]);